<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
				xmlns:renderers="views.renderers.*"
				title="Link to Experiment"
				creationComplete="init()"
				showCloseButton="true"
				close="{PopUpManager.removePopUp(this)}"
				horizontalScrollPolicy="off" verticalScrollPolicy="off">
	
	<mx:HTTPService 
		id="getRequestList" 
		url="GetRequestList.gx"
		concurrency="multiple"
		resultFormat="e4x"
		result="onGetRequestList(event)"
		showBusyCursor="true"
		fault="parentApplication.onFailHttpRequest('Unable to get exp list', event)"
		method="POST"
		useProxy="false">
	</mx:HTTPService >
	
	<mx:HTTPService 
		id="linkExpToAnalysis" 
		url="LinkExpToAnalysis.gx"
		concurrency="multiple"
		resultFormat="e4x"
		result="onLinkExpToAnalysis(event)"
		showBusyCursor="true"
		fault="parentApplication.onFailHttpRequest('Unable to link', event)"
		method="POST"
		useProxy="false">
	</mx:HTTPService >
	
	
	<mx:Script>
		<![CDATA[
			
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var experimentToLink:Object = null;
			
			public var idAnalysis:Object = null;
			
			public var idLab:Object = null;
			
			public var parentWindow:Object = null;
			
			public function init():void{
				var params:Object = new Object();
				params.includePlateInfo = 'N';
				params.linkToAnalysisExpsOnly = 'N';
				params.idLab = this.idLab;
				params.ignoreMaxRequestLimit = 'Y';
				getRequestList.send(params);
				labCombo.selectedIndex = this.getSelectedLabIndex();
			}
			
			
			private function onGetRequestList(event:ResultEvent):void{
				if ( getRequestList.lastResult.name() == "RequestList"){
					orderList.refresh();
					
					if(orderList.length == 0){
						this.noExpMessage.visible = true;
						this.noExpMessage.includeInLayout = true;
					} else{
						this.noExpMessage.visible = false;
						this.noExpMessage.includeInLayout = false;
					}
				} else{
					Alert.show( event.result..ERROR.@message.toString(), "Error getting RequestList" );
				}
			}
			
			private function linkExperiment():void{
				var params:Object = new Object();
				params.idRequest = experimentToLink.@idRequest;
				params.idAnalysis = this.idAnalysis;
				linkExpToAnalysis.send(params);
				
			}
			
			private function onLinkExpToAnalysis(event:ResultEvent):void{
				if(linkExpToAnalysis.lastResult.name() == "SUCCESS"){
					Alert.show("Analysis was successfully linked");
					//We will only be coming from analysisDetail or analysisEdit and both of them
					//have parent of NavAnalysisView.  So refresh the selected analysis to pick up link
					if(parentWindow != null){
						parentWindow.parentDocument.forceReload = true;
						parentWindow.parentDocument.refreshAnalysis();
					}
					PopUpManager.removePopUp(this);
				} else{
					Alert.show( event.result..ERROR.@message.toString(), "Error during linking " );
				}
			}
			
			private function getSelectedLabIndex():int{
				for(var i:int = 0; i < userLabs.length; i++){
					var lab:Object = userLabs.getItemAt(i);
					if(lab.@idLab == this.idLab){
						return i;
					}
				}			
				return -1;			
			}
			
			private function filterResults():void{
				var params:Object = new Object();
				//search by lab
				if(labCombo.selectedItem != null && labCombo.selectedItem.@idLab != ""){
					params.idLab = labCombo.selectedItem.@idLab;
					params.includePlateInfo = 'N';
				}
				//search by request number
				if(expSearch.length > 0){
					params.number = expSearch.text;
				}
				//only bring back experiments that are able to be linked
				params.linkToAnalysisExpsOnly = 'Y';
				
				getRequestList.send(params);
				
			}
			
		]]>
	</mx:Script>
	
	<mx:XMLListCollection id="orderList" source="{getRequestList.lastResult.Request}"/>
	<mx:XMLListCollection id="requestCategories" source="{parentApplication.dictionaryManager.xml.Dictionary.(@className == 'hci.gnomex.model.RequestCategory').DictionaryEntry.(@isActive == 'Y' &amp;&amp; @value != '')}"/>
	<mx:XMLListCollection id="userLabs" source="{parentApplication.submitRequestLabList.source}"/>
	
	
	<mx:HBox>
		<mx:Label text="Search by request number: "/>
		<mx:TextInput id="expSearch" change="filterResults()" enabled="{this.orderList.length > 0 || expSearch.text.length > 0}"/>
		
		<mx:Spacer width="25" />
		
		<mx:Label text="Filter by Lab: "/>
		<renderers:FilterComboBox id="labCombo" width="250" close="filterResults()" dataProvider="{this.userLabs}" labelField="@name"/>
	</mx:HBox>
	
	<mx:Text id="noExpMessage" text="There are no experiments eligible for linking in this lab" visible="false" includeInLayout="false"/>
	
	<mx:DataGrid id="requestGrid" width="100%" dataProvider="{this.orderList}" sortableColumns="true" itemClick="{experimentToLink = requestGrid.selectedItem}" allowMultipleSelection="false">
		
		<mx:columns>
			<mx:DataGridColumn dataField="@name" headerText="Experiment"/>
			<mx:DataGridColumn dataField="@requestNumber" headerText="Number"/>
<!--			<mx:DataGridColumn dataField="@requestStatus" headerText="Status"/>-->
			<mx:DataGridColumn dataField="@createDate" headerText="Create Date"/>
			<mx:DataGridColumn dataField="@ownerName" headerText="Owner"/>
			<mx:DataGridColumn dataField="@labName" headerText="Lab"/>
			<mx:DataGridColumn dataField="@numberOfSamples" headerText="# Samples"/>
<!--			<mx:DataGridColumn dataField="@numberOfSeqLanes" headerText="# Seq Lanes"/>
			<mx:DataGridColumn dataField="@numberOfHybs" headerText="# Hybs"/>-->
		</mx:columns>
		
	</mx:DataGrid>
	
	<mx:ControlBar width="451" horizontalAlign="right">
		<mx:Button label="Link" id="saveButton" click="linkExperiment()" icon="@Embed(source='../../assets/icon_link.gif')" 
				   enabled="{experimentToLink != null}" 
				   disabledIcon="@Embed(source='../../assets/icon_link_disable.gif')"/>
		<mx:Button label="Cancel" click="{mx.managers.PopUpManager.removePopUp(this)}"/>
	</mx:ControlBar>
	

</mx:TitleWindow>
